<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="11" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-10-06T18:23:19 IST" name="ProcureZen_Test_Suite" finished-at="2025-10-06T18:32:33 IST" duration-ms="554788">
    <groups>
    </groups>
    <test started-at="2025-10-06T18:23:19 IST" name="Procurezen" finished-at="2025-10-06T18:32:33 IST" duration-ms="554788">
      <class name="tests.LoginTest">
        <test-method is-config="true" signature="setupReport()[pri:0, instance:tests.LoginTest@d0ec63]" started-at="2025-10-06T18:23:17 IST" name="setupReport" finished-at="2025-10-06T18:23:19 IST" duration-ms="1223" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupReport -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@d0ec63]" started-at="2025-10-06T18:23:19 IST" name="setup" finished-at="2025-10-06T18:23:29 IST" duration-ms="9755" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.valid_Buyer_login() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="valid_Buyer_login()[pri:0, instance:tests.LoginTest@d0ec63]" started-at="2025-10-06T18:23:29 IST" name="valid_Buyer_login" finished-at="2025-10-06T18:23:34 IST" duration-ms="5143" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valid_Buyer_login -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@d0ec63]" started-at="2025-10-06T18:23:34 IST" name="tearDown" finished-at="2025-10-06T18:23:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=valid_Buyer_login status=SUCCESS method=LoginTest.valid_Buyer_login()[pri:0, instance:tests.LoginTest@d0ec63] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:tests.LoginTest@d0ec63]" started-at="2025-10-06T18:23:34 IST" name="quitBrowser" finished-at="2025-10-06T18:23:34 IST" duration-ms="485" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
        <test-method is-config="true" signature="tearDownReport()[pri:0, instance:tests.LoginTest@d0ec63]" started-at="2025-10-06T18:32:34 IST" name="tearDownReport" finished-at="2025-10-06T18:32:35 IST" duration-ms="1470" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownReport -->
      </class> <!-- tests.LoginTest -->
      <class name="tests.AdminTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AdminTest@41a6d121]" started-at="2025-10-06T18:32:23 IST" name="setup" finished-at="2025-10-06T18:32:29 IST" duration-ms="5685" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AdminTest.valid_Admin_login() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="valid_Admin_login()[pri:0, instance:tests.AdminTest@41a6d121]" started-at="2025-10-06T18:32:29 IST" name="valid_Admin_login" finished-at="2025-10-06T18:32:33 IST" duration-ms="4376" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valid_Admin_login -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AdminTest@41a6d121]" started-at="2025-10-06T18:32:33 IST" name="tearDown" finished-at="2025-10-06T18:32:33 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=valid_Admin_login status=SUCCESS method=AdminTest.valid_Admin_login()[pri:0, instance:tests.AdminTest@41a6d121] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:tests.AdminTest@41a6d121]" started-at="2025-10-06T18:32:33 IST" name="quitBrowser" finished-at="2025-10-06T18:32:33 IST" duration-ms="536" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
      </class> <!-- tests.AdminTest -->
      <class name="tests.Inventory_Test">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.Inventory_Test@5baaae4c]" started-at="2025-10-06T18:31:44 IST" name="setup" finished-at="2025-10-06T18:31:49 IST" duration-ms="4660" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.Inventory_Test.create_inventory_items() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="create_inventory_items()[pri:0, instance:tests.Inventory_Test@5baaae4c]" started-at="2025-10-06T18:31:49 IST" name="create_inventory_items" finished-at="2025-10-06T18:32:07 IST" duration-ms="18497" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- create_inventory_items -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.Inventory_Test@5baaae4c]" started-at="2025-10-06T18:32:07 IST" name="tearDown" finished-at="2025-10-06T18:32:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=create_inventory_items status=SUCCESS method=Inventory_Test.create_inventory_items()[pri:0, instance:tests.Inventory_Test@5baaae4c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:tests.Inventory_Test@5baaae4c]" started-at="2025-10-06T18:32:07 IST" name="quitBrowser" finished-at="2025-10-06T18:32:08 IST" duration-ms="848" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
      </class> <!-- tests.Inventory_Test -->
      <class name="tests.PreQualify_Test">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.PreQualify_Test@456be73c]" started-at="2025-10-06T18:31:08 IST" name="setup" finished-at="2025-10-06T18:31:13 IST" duration-ms="4794" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.PreQualify_Test.Supplier_PreQualification() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Supplier_PreQualification()[pri:0, instance:tests.PreQualify_Test@456be73c]" started-at="2025-10-06T18:31:13 IST" name="Supplier_PreQualification" finished-at="2025-10-06T18:31:27 IST" duration-ms="13555" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Supplier_PreQualification -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.PreQualify_Test@456be73c]" started-at="2025-10-06T18:31:27 IST" name="tearDown" finished-at="2025-10-06T18:31:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Supplier_PreQualification status=SUCCESS method=PreQualify_Test.Supplier_PreQualification()[pri:0, instance:tests.PreQualify_Test@456be73c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:tests.PreQualify_Test@456be73c]" started-at="2025-10-06T18:31:27 IST" name="quitBrowser" finished-at="2025-10-06T18:31:28 IST" duration-ms="1029" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
      </class> <!-- tests.PreQualify_Test -->
      <class name="tests.MR_Test">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.MR_Test@7ff2b8d2]" started-at="2025-10-06T18:26:02 IST" name="setup" finished-at="2025-10-06T18:26:05 IST" duration-ms="2615" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.MR_Test.create_new_MR() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="create_new_MR()[pri:0, instance:tests.MR_Test@7ff2b8d2]" started-at="2025-10-06T18:26:05 IST" name="create_new_MR" finished-at="2025-10-06T18:26:37 IST" duration-ms="32163" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- create_new_MR -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.MR_Test@7ff2b8d2]" started-at="2025-10-06T18:26:37 IST" name="tearDown" finished-at="2025-10-06T18:26:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=create_new_MR status=SUCCESS method=MR_Test.create_new_MR()[pri:0, instance:tests.MR_Test@7ff2b8d2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:tests.MR_Test@7ff2b8d2]" started-at="2025-10-06T18:26:37 IST" name="quitBrowser" finished-at="2025-10-06T18:26:37 IST" duration-ms="266" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
      </class> <!-- tests.MR_Test -->
      <class name="tests.Account_Creation">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.Account_Creation@5a865416]" started-at="2025-10-06T18:23:34 IST" name="setup" finished-at="2025-10-06T18:23:38 IST" duration-ms="3850" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.Account_Creation.supplier_user_creation() throws java.lang.InterruptedException,java.util.concurrent.TimeoutException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="supplier_user_creation()[pri:0, instance:tests.Account_Creation@5a865416]" started-at="2025-10-06T18:23:38 IST" name="supplier_user_creation" finished-at="2025-10-06T18:23:59 IST" duration-ms="20918" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- supplier_user_creation -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.Account_Creation@5a865416]" started-at="2025-10-06T18:23:59 IST" name="tearDown" finished-at="2025-10-06T18:23:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=supplier_user_creation status=SUCCESS method=Account_Creation.supplier_user_creation()[pri:0, instance:tests.Account_Creation@5a865416] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:tests.Account_Creation@5a865416]" started-at="2025-10-06T18:23:59 IST" name="quitBrowser" finished-at="2025-10-06T18:23:59 IST" duration-ms="313" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
      </class> <!-- tests.Account_Creation -->
      <class name="tests.PO_Test">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.PO_Test@2fb5fe30]" started-at="2025-10-06T18:29:27 IST" name="setup" finished-at="2025-10-06T18:29:31 IST" duration-ms="4571" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.PO_Test.create_new_PO() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="create_new_PO()[pri:0, instance:tests.PO_Test@2fb5fe30]" started-at="2025-10-06T18:29:31 IST" name="create_new_PO" finished-at="2025-10-06T18:31:07 IST" duration-ms="96055" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: By.xpath: //div[contains(@class, 'mat-mdc-snack-bar-label') and normalize-space(text())='Purchase Order successfully saved'] (tried for 10 second(s) with 500 milliseconds interval)
Build info: version: '4.29.0', revision: '5fc1ec94cb'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '23.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.208, chrome: {chromedriverVersion: 140.0.7339.207 (17230b545fd..., userDataDir: C:\Users\MBOOPA~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:50202}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:50202/devtoo..., se:cdpVersion: 140.0.7339.208, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 6446d74c371757e6b17b0e626e511545]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: By.xpath: //div[contains(@class, 'mat-mdc-snack-bar-label') and normalize-space(text())='Purchase Order successfully saved'] (tried for 10 second(s) with 500 milliseconds interval)
Build info: version: '4.29.0', revision: '5fc1ec94cb'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '23.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.208, chrome: {chromedriverVersion: 140.0.7339.207 (17230b545fd..., userDataDir: C:\Users\MBOOPA~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:50202}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:50202/devtoo..., se:cdpVersion: 140.0.7339.208, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 6446d74c371757e6b17b0e626e511545
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at tests.PO_Test.create_new_PO(PO_Test.java:230)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- create_new_PO -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.PO_Test@2fb5fe30]" started-at="2025-10-06T18:31:07 IST" name="tearDown" finished-at="2025-10-06T18:31:08 IST" duration-ms="289" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=create_new_PO status=FAILURE method=PO_Test.create_new_PO()[pri:0, instance:tests.PO_Test@2fb5fe30] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:tests.PO_Test@2fb5fe30]" started-at="2025-10-06T18:31:08 IST" name="quitBrowser" finished-at="2025-10-06T18:31:08 IST" duration-ms="703" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
      </class> <!-- tests.PO_Test -->
      <class name="tests.TA_NewProject_Test">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.TA_NewProject_Test@5b6e8f77]" started-at="2025-10-06T18:32:08 IST" name="setup" finished-at="2025-10-06T18:32:13 IST" duration-ms="4817" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.TA_NewProject_Test.transitagency_Project() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="transitagency_Project()[pri:0, instance:tests.TA_NewProject_Test@5b6e8f77]" started-at="2025-10-06T18:32:13 IST" name="transitagency_Project" finished-at="2025-10-06T18:32:22 IST" duration-ms="9220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- transitagency_Project -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.TA_NewProject_Test@5b6e8f77]" started-at="2025-10-06T18:32:22 IST" name="tearDown" finished-at="2025-10-06T18:32:22 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=transitagency_Project status=SUCCESS method=TA_NewProject_Test.transitagency_Project()[pri:0, instance:tests.TA_NewProject_Test@5b6e8f77] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:tests.TA_NewProject_Test@5b6e8f77]" started-at="2025-10-06T18:32:22 IST" name="quitBrowser" finished-at="2025-10-06T18:32:23 IST" duration-ms="803" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
      </class> <!-- tests.TA_NewProject_Test -->
      <class name="tests.RFQ_Test">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.RFQ_Test@6e92c6ad]" started-at="2025-10-06T18:27:55 IST" name="setup" finished-at="2025-10-06T18:28:00 IST" duration-ms="5017" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.RFQ_Test.create_new_RFQ() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="create_new_RFQ()[pri:0, instance:tests.RFQ_Test@6e92c6ad]" started-at="2025-10-06T18:28:00 IST" name="create_new_RFQ" finished-at="2025-10-06T18:29:26 IST" duration-ms="85819" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- create_new_RFQ -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.RFQ_Test@6e92c6ad]" started-at="2025-10-06T18:29:26 IST" name="tearDown" finished-at="2025-10-06T18:29:26 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=create_new_RFQ status=SUCCESS method=RFQ_Test.create_new_RFQ()[pri:0, instance:tests.RFQ_Test@6e92c6ad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:tests.RFQ_Test@6e92c6ad]" started-at="2025-10-06T18:29:26 IST" name="quitBrowser" finished-at="2025-10-06T18:29:27 IST" duration-ms="852" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
      </class> <!-- tests.RFQ_Test -->
      <class name="tests.PR_Test">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.PR_Test@6dc1484]" started-at="2025-10-06T18:26:37 IST" name="setup" finished-at="2025-10-06T18:26:40 IST" duration-ms="2725" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.PR_Test.create_new_PR() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="create_new_PR()[pri:0, instance:tests.PR_Test@6dc1484]" started-at="2025-10-06T18:26:40 IST" name="create_new_PR" finished-at="2025-10-06T18:27:54 IST" duration-ms="74080" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- create_new_PR -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.PR_Test@6dc1484]" started-at="2025-10-06T18:27:54 IST" name="tearDown" finished-at="2025-10-06T18:27:54 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=create_new_PR status=SUCCESS method=PR_Test.create_new_PR()[pri:0, instance:tests.PR_Test@6dc1484] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:tests.PR_Test@6dc1484]" started-at="2025-10-06T18:27:54 IST" name="quitBrowser" finished-at="2025-10-06T18:27:55 IST" duration-ms="800" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
      </class> <!-- tests.PR_Test -->
      <class name="tests.Reg_Test">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.Reg_Test@14faa38c]" started-at="2025-10-06T18:23:59 IST" name="setup" finished-at="2025-10-06T18:24:04 IST" duration-ms="4216" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.Reg_Test.supplier_registration() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="supplier_registration()[pri:0, instance:tests.Reg_Test@14faa38c]" started-at="2025-10-06T18:24:04 IST" name="supplier_registration" finished-at="2025-10-06T18:26:02 IST" duration-ms="118448" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- supplier_registration -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.Reg_Test@14faa38c]" started-at="2025-10-06T18:26:02 IST" name="tearDown" finished-at="2025-10-06T18:26:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=supplier_registration status=SUCCESS method=Reg_Test.supplier_registration()[pri:0, instance:tests.Reg_Test@14faa38c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:tests.Reg_Test@14faa38c]" started-at="2025-10-06T18:26:02 IST" name="quitBrowser" finished-at="2025-10-06T18:26:02 IST" duration-ms="371" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
      </class> <!-- tests.Reg_Test -->
      <class name="tests.Directory_Test">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.Directory_Test@2375b321]" started-at="2025-10-06T18:31:28 IST" name="setup" finished-at="2025-10-06T18:31:32 IST" duration-ms="4650" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.Directory_Test.Supplier_Directory() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Supplier_Directory()[pri:0, instance:tests.Directory_Test@2375b321]" started-at="2025-10-06T18:31:32 IST" name="Supplier_Directory" finished-at="2025-10-06T18:31:43 IST" duration-ms="10937" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Supplier_Directory -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.Directory_Test@2375b321]" started-at="2025-10-06T18:31:43 IST" name="tearDown" finished-at="2025-10-06T18:31:43 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Supplier_Directory status=SUCCESS method=Directory_Test.Supplier_Directory()[pri:0, instance:tests.Directory_Test@2375b321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:tests.Directory_Test@2375b321]" started-at="2025-10-06T18:31:43 IST" name="quitBrowser" finished-at="2025-10-06T18:31:44 IST" duration-ms="675" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
      </class> <!-- tests.Directory_Test -->
    </test> <!-- Procurezen -->
  </suite> <!-- ProcureZen_Test_Suite -->
</testng-results>
